
键值缓存模块，此模块在实现时要采用一致性哈希算法，因为这个算法可以使得缓存集群能达到较好的伸缩性，即在

增减缓存服务器时，原有的已存在的缓存仍然可以达到较高的命中率。

一致性哈希算法思想举例：

(1) 用一组数字构成一个环，在此使用0-255的数字来构成一个环，这些数字代表的是虚拟缓存节点；

(2) 把环上的一组虚拟缓存节点映射到一个真实的缓存节点上去，如下图所示：

    0-63 映射到真实缓存节点1
    64-127 映射到真实缓存节点2
    128-191 映射到真实缓存节点3
    192-255 映射到真实缓存节点4

(3) 存取缓存数据时，根据键计算出0-255中的一个数字，根据这个数字再找到真实的缓存节点；

(4) 当增加真实缓存节点时，挑选出一组虚拟节点，然后映射到这个真实的缓存节点上去，如：

    把 0-14、64-78、128-142、192-206 这些虚拟节点映射到新增的真实缓存节点上去

    这样原有的缓存依然可以命中，原来有4个真实缓存节点，现在有5个真实缓存节点，现在的缓存命中率为：

    4/5 = 80%；

(5) 减少真实缓存节点就重新把虚拟缓存节点映射一下就行了；
